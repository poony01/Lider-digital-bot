// controladores/mensagemControlador.js

import TelegramBot from "node-telegram-bot-api";
import { obterUsuario, salvarUsuario } from "../serviÃ§os/usuarioService.js";
import { verificarAssinaturaAtiva } from "../serviÃ§os/pagamentoService.js";
import { gerarImagem } from "../serviÃ§os/imagemService.js";
import { gerarVideo } from "../serviÃ§os/videoService.js";
import { transcreverAudio } from "../serviÃ§os/audioService.js";
import { responderComVoz } from "../serviÃ§os/vozService.js";
import { apresentarPlanos } from "./commandController.js";

const boasVindas = async (bot, msg) => {
  const chatId = msg.chat.id;
  const nome = msg.from.first_name;

  const texto = `ðŸ‘‹ OlÃ¡, ${nome}! Seja bem-vindo ao *LÃ­der Digital*!

Sou um bot de inteligÃªncia artificial poderoso e posso te ajudar com:
âœ… Responder perguntas
âœ… Gerar *imagens realistas* (plano necessÃ¡rio)
âœ… Criar *vÃ­deos com IA* (plano premium)
âœ… Converter Ã¡udio para texto
âœ… Responder com voz

ðŸ’¡ Para comeÃ§ar, digite "plano" e conheÃ§a as opÃ§Ãµes.`;

  await bot.sendMessage(chatId, texto, { parse_mode: "Markdown" });
};

const tratarMensagem = async (bot, msg) => {
  const chatId = msg.chat.id;
  const texto = msg.text?.toLowerCase();
  const usuario = await obterUsuario(chatId);

  if (!usuario) await salvarUsuario(msg.from);

  // Mensagem de comando inicial
  if (texto === "/start") {
    return boasVindas(bot, msg);
  }

  // Mostrar planos se digitar "plano"
  if (texto?.includes("plano")) {
    return apresentarPlanos(bot, chatId);
  }

  // Verificar assinatura
  const assinaturaAtiva = await verificarAssinaturaAtiva(chatId);

  // Comando de imagem
  if (texto?.includes("imagem")) {
    if (!assinaturaAtiva)
      return bot.sendMessage(chatId, "ðŸ”’ Para gerar imagens, ative um plano: digite *plano*", { parse_mode: "Markdown" });

    return gerarImagem(bot, chatId, texto);
  }

  // Comando de vÃ­deo
  if (texto?.includes("vÃ­deo") || texto?.includes("video")) {
    if (!assinaturaAtiva || usuario.plano !== "premium")
      return bot.sendMessage(chatId, "ðŸ”’ Apenas clientes *premium* podem gerar vÃ­deos. Digite *plano* para mais detalhes.", { parse_mode: "Markdown" });

    return gerarVideo(bot, chatId, texto);
  }

  // Responder normalmente com IA
  if (texto && texto.length > 2) {
    return bot.sendMessage(chatId, "ðŸ¤– Estou processando sua pergunta...");
  }
};

const tratarAudio = async (bot, msg) => {
  const chatId = msg.chat.id;
  const assinaturaAtiva = await verificarAssinaturaAtiva(chatId);

  if (!assinaturaAtiva) {
    return bot.sendMessage(chatId, "ðŸ”’ Para usar mensagens de voz, ative um plano: digite *plano*", { parse_mode: "Markdown" });
  }

  await transcreverAudio(bot, msg);
};

const tratarTextoComVoz = async (bot, chatId, texto) => {
  await responderComVoz(bot, chatId, texto);
};

export { tratarMensagem, tratarAudio, tratarTextoComVoz };
